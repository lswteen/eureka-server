buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
        gradleDockerVersion = '0.13.0'
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${gradleDockerVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jar'
apply plugin: 'com.palantir.docker'


group = 'com.sunu.eureka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

description = "eureka-server"

repositories {
    mavenCentral()
}

def javaVersion = JavaVersion.VERSION_1_8


sourceCompatibility = javaVersion
targetCompatibility = javaVersion

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


ext {
    springCloudVersion = 'Finchley.SR1'
    dockerComposeRuleJunit4Version = '0.34.0'
    jsonPathVersion = '2.4.0'
    snippetsDir = file('build/generated-snippets')
    asciidocDir = file('src/docs/asciidoc')
}

dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

docker {
    dependsOn build
    dockerfile file('docker/Dockerfile')
    name "wmp/${jar.baseName}:${jar.version}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
    noCache true
}

